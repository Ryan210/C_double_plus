所谓“编译型语言”，指的是源程序的代码写好之后，编译器直接把高级语言的源代码编译成二进制的机器码，执行的时候直接运行机器码就行了——这门课程学习的 C++ 语言，是一种典型的编译型语言；而“解释型语言”则与之不同，写好的代码不会马上就被翻译成机器码，而是先保存成源程序的代码文件——等到运行的时候，这些语句才会由解释器来一条一条地解释执行——很多脚本语言，比如 Python，都属于解释型语言。
一般而言，编译型语言拥有更高的运行效率，而解释型语言的可移植性更好——此外，还有一些介于两者之间的语言，比如JAVA/C#，就是先编译成某种“中间代码”然后再交由不同平台的虚拟机解释执行的。

首先，在文本编辑器中写好代码，然后保存——类似于 C 语言，所有 C++ 语言的代码都是以*.cpp文件的形式保存在你的电脑上的。比如你写了一个程序，想要命名为“AlohaOe”，那么这个文件的名字就是AlohaOe.cpp。接下来启动你的操作系统自带的控制台（Terminal或者CMD），然后进入到文件所在目录，输入以下命令：
g++ AlohaOe.cpp -o AlohaOe
其中，第一个参数代表要编译的文件，-o代表输出，最后一个参数代表你想要让编译器输出可执行文件的名字——这里你可以随意更改。如果你的程序没有错误的话，那么这条命令执行之后就不会返回任何提示——反之则会报错并指出你的程序在哪里出了偏差。编译完成之后就可以试着运行你的程序了——在命令行中输入./AlohaOe或者AlohaOe就可以直接启动你已经编译好的程序。


在写程序的时候，有哪些地方非常需要换行呢？
不在圆括号内的分号后
左大括号和右大括号之后
当一行代码的字符个数超过你的视觉处理能力（一般取 80 个字符）的时候
